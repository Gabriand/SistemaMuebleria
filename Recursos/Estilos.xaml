<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- Colores del Sistema -->
    <Color x:Key="PrimaryColor">#1a73e8</Color>
    <Color x:Key="SecondaryColor">#6c757d</Color>
    <Color x:Key="AccentColor">#2196F3</Color>
    <Color x:Key="BackgroundColorPrimary">#F5F5F5</Color>
    <Color x:Key="BackgroundColorSecond">#FFFFFF</Color>
    <Color x:Key="BackgroundColorThird">#BDC3C7</Color>
    <Color x:Key="TextPrimaryColor">#212121</Color>

    <!-- Brushes -->
    <SolidColorBrush x:Key="PrimaryBrush" Color="{StaticResource PrimaryColor}"/>
    <SolidColorBrush x:Key="SecondaryBrush" Color="{StaticResource SecondaryColor}"/>
    <SolidColorBrush x:Key="AccentBrush" Color="{StaticResource AccentColor}"/>
    <SolidColorBrush x:Key="BackgroundBrushPrimary" Color="{StaticResource BackgroundColorPrimary}"/>
    <SolidColorBrush x:Key="BackgroundBrushSecond" Color="{StaticResource BackgroundColorSecond}"/>
    <SolidColorBrush x:Key="BackgroundBrushThird" Color="{StaticResource BackgroundColorThird}"/>
    <SolidColorBrush x:Key="TextPrimaryBrush" Color="{StaticResource TextPrimaryColor}"/>

    <!-- Estilo Base para Botones -->
    <Style x:Key="BaseButtonStyle" TargetType="Button">
        <Setter Property="Height" Value="35"/>
        <Setter Property="Padding" Value="15,5"/>
        <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource AccentBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Estilo Destructivo para Botones -->
    <Style x:Key="DestButtonStyle" TargetType="Button">
        <Setter Property="Height" Value="35"/>
        <Setter Property="Padding" Value="15,5"/>
        <Setter Property="Background" Value="red"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Tomato" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Estilo Inverso para Botones -->
    <Style x:Key="InverseButtonStyle" TargetType="Button">
        <Setter Property="Height" Value="35"/>
        <Setter Property="Padding" Value="15,5"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource SecondaryBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" 
                                      VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource SecondaryBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Estilo para TextBox -->
    <Style x:Key="ModernTextBox" TargetType="TextBox">
        <Setter Property="Height" Value="35"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="Background" Value="#f5f5f5"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#e0e0e0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Estilo para PasswordBox -->
    <Style x:Key="ModernPasswordBox" TargetType="PasswordBox">
        <Setter Property="Height" Value="35"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="Background" Value="#f5f5f5"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#e0e0e0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4">
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Estilo para TextBlock con MouseOver -->
    <Style x:Key="HyperlinkTextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource AccentBrush}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="TextDecorations" Value="Underline"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Estilo para DataGrid -->
    <Style x:Key="ModernDataGrid" TargetType="DataGrid">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#e0e0e0"/>
        <Setter Property="GridLinesVisibility" Value="Horizontal"/>
        <Setter Property="HorizontalGridLinesBrush" Value="#f0f0f0"/>
        <Setter Property="RowHeight" Value="35"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
    </Style>

    <!-- Estilo para DataGrid Header -->
    <Style x:Key="DataGridColumnHeaderStyle" TargetType="DataGridColumnHeader">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Background" Value="#f5f5f5"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
        <Setter Property="Padding" Value="10,0"/>
        <Setter Property="BorderThickness" Value="0,0,1,1"/>
        <Setter Property="BorderBrush" Value="#e0e0e0"/>
    </Style>

    <Style x:Key="ModernComboBox" TargetType="ComboBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <!-- Botón desplegable -->
                        <ToggleButton 
                        Name="ToggleButton"
                        Focusable="False"
                        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                        ClickMode="Press"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        HorizontalAlignment="Right">
                            <Path 
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="M 0 0 L 4 4 L 8 0 Z"
                            Fill="Black" />
                        </ToggleButton>

                        <!-- Contenido seleccionado -->
                        <ContentPresenter 
                        Name="ContentSite"
                        Content="{TemplateBinding SelectionBoxItem}"
                        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                        Margin="5,0,25,0"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Left" />

                        <!-- Lista desplegable -->
                        <Popup 
                        Name="Popup"
                        Placement="Bottom"
                        IsOpen="{TemplateBinding IsDropDownOpen}"
                        AllowsTransparency="True"
                        Focusable="False"
                        PopupAnimation="Slide">
                            <Border 
                            BorderThickness="1"
                            Background="White">
                                <ScrollViewer>
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Estilo para Label -->
    <Style x:Key="ModernLabel" TargetType="Label">
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
        <Setter Property="Margin" Value="0,5"/>
        <Setter Property="FontSize" Value="12"/>
    </Style>

    <!-- Estilo para GroupBox -->
    <Style x:Key="ModernGroupBox" TargetType="GroupBox">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#e0e0e0"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Margin" Value="0,10"/>
    </Style>

    <!-- Estilo para ListView -->
    <Style x:Key="ModernListView" TargetType="ListView">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#e0e0e0"/>
    </Style>

    <!-- Estilo para TabControl -->
    <Style x:Key="ModernTabControl" TargetType="TabControl">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#e0e0e0"/>
    </Style>

    <!-- Estilo para TabItem -->
    <Style x:Key="ModernTabItem" TargetType="TabItem">
        <Setter Property="Padding" Value="15,8"/>
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}" FontSize="13"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
